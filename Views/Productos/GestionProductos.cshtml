@model IEnumerable<MyPymeStore.Models.Producto>
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewBag.Title = "Gestión de Productos";
    var categoriasSelectList = ViewBag.CategoriasSelectList as IEnumerable<SelectListItem>;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Gestión de Productos</h2>
    <a class="btn btn-primary" href="/Productos/Create">Agregar Producto</a>
</div>

<!-- Filtros -->
<form method="get" class="row g-3 mb-3">
    <div class="col-md-4">
        <input type="text" name="searchName" class="form-control" placeholder="Buscar por nombre" value="@ViewBag.CurrentName" />
    </div>
    <div class="col-md-4">
        <select name="categoryId" class="form-control">
            <option value="0">Todas las categorías</option>
            @if (categoriasSelectList != null)
            {
                foreach (var c in categoriasSelectList)
                {
                    string selected = (ViewBag.CurrentCategory?.ToString() == c.Value) ? "selected" : "";
                    @:<option value="@c.Value" @selected>@c.Text</option>
                }
            }
        </select>
    </div>
    <div class="col-md-4">
        <button type="submit" class="btn btn-secondary">Filtrar</button>
    </div>
</form>

<table class="table table-striped table-bordered table-hover" id="productosTable">
    <thead class="table-dark">
        <tr>
            <th>Id</th>
            <th>Nombre</th>
            <th>Imagen</th>
            <th>Precio</th>
            <th>IVA (%)</th>
            <th>Total</th>
            <th>Stock</th>
            <th>Categoría</th>
            <th>Activo</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var ivaPorcentaje = item.Precio != 0 ? (item.ImpuestosPorCompra / item.Precio * 100) : 0;
            <tr id="productoRow-@item.Id">
                <td>@item.Id</td>
                <td class="nombre">@item.Nombre</td>
                <td class="imagen">
                    @if (!string.IsNullOrEmpty(item.ImagenUrl))
                    {
                        <img src="@item.ImagenUrl" alt="@item.Nombre" width="60" height="60" />
                    }
                </td>
                <td class="precio">@item.Precio.ToString("0.00")</td>
                <td class="iva">@ivaPorcentaje.ToString("0.00")</td>
                <td class="total">@(item.Precio + item.ImpuestosPorCompra).ToString("0.00")</td>
                <td class="stock">@item.Stock</td>
                <td class="categoria">@item.Categoria?.Nombre</td>
                <td class="activo">@((item.Activo) ? "Sí" : "No")</td>
                <td>
                    <button class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#editModal-@item.Id">Editar</button>
                    <button class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#detailModal-@item.Id">Detalle</button>
                    <form asp-action="DeleteConfirmed" method="post" style="display:inline-block" onsubmit="return confirm('¿Seguro que deseas eliminar este producto?');">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@item.Id" />
                        <button type="submit" class="btn btn-danger btn-sm">Eliminar</button>
                    </form>
                </td>
            </tr>

            <!-- Modal de edición -->
            <div class="modal fade" id="editModal-@item.Id" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <form class="edit-product-form" data-productid="@item.Id">
                            @Html.AntiForgeryToken()
                            <div class="modal-header">
                                <h5 class="modal-title">Editar Producto</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>

                            <div class="modal-body">
                                <input type="hidden" name="Id" value="@item.Id" />

                                <div class="mb-2">
                                    <label>Nombre</label>
                                    <input name="Nombre" class="form-control" value="@item.Nombre" required />
                                </div>

                                <div class="mb-2">
                                    <label>Imagen (URL)</label>
                                    <input name="ImagenUrl" class="form-control" value="@item.ImagenUrl" placeholder="https://ejemplo.com/imagen.jpg" />
                                    @if (!string.IsNullOrEmpty(item.ImagenUrl))
                                    {
                                        <img src="@item.ImagenUrl" alt="@item.Nombre" width="100" class="mt-2" />
                                    }
                                </div>

                                <div class="mb-2">
                                    <label>Precio</label>
                                    <input type="text" step="0.01" id="precio-@item.Id" name="Precio" class="form-control number-input" value="@item.Precio.ToString("0.00")" required />
                                </div>

                                <div class="mb-2">
                                    <label>IVA (%)</label>
                                    <input type="text" step="0.01" id="ivaPorc-@item.Id" class="form-control number-input" value="@ivaPorcentaje.ToString("0.00")" />
                                    <input type="hidden" name="ImpuestosPorCompra" id="ivaValue-@item.Id" value="@item.ImpuestosPorCompra" />
                                </div>

                                <div class="mb-2">
                                    <label>Total</label>
                                    <input type="text" class="form-control" id="total-@item.Id" value="@(item.Precio + item.ImpuestosPorCompra).ToString("0.00")" readonly />
                                </div>

                                <div class="mb-2">
                                    <label>Stock</label>
                                    <input type="number" name="Stock" class="form-control" value="@item.Stock" required />
                                </div>

                                <div class="mb-2">
                                    <label>Categoría</label>
                                    <select name="CategoriaId" class="form-control" required>
                                        @if (categoriasSelectList != null)
                                        {
                                            foreach (var c in categoriasSelectList)
                                            {
                                                string selected = (c.Value == item.CategoriaId.ToString()) ? "selected" : "";
                                                @:<option value="@c.Value" @selected>@c.Text</option>
                                            }
                                        }
                                    </select>
                                </div>

                                <div class="form-check mb-2">
                                    <input type="hidden" name="Activo" value="false" />
                                    <input type="checkbox" class="form-check-input" name="Activo" value="true" @(item.Activo ? "checked" : "") />
                                    <label class="form-check-label">Activo</label>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="submit" class="btn btn-success">Guardar</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Modal de detalle -->
            <div class="modal fade" id="detailModal-@item.Id" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Detalle Producto</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <p><strong>Nombre:</strong> @item.Nombre</p>
                            <p><strong>Imagen:</strong><br />
                                @if (!string.IsNullOrEmpty(item.ImagenUrl))
                                {
                                    <img src="@item.ImagenUrl" alt="@item.Nombre" width="120" />
                                }
                            </p>
                            <p><strong>Precio:</strong> @item.Precio.ToString("0.00")</p>
                            <p><strong>IVA (%):</strong> @ivaPorcentaje.ToString("0.00")</p>
                            <p><strong>Total:</strong> @(item.Precio + item.ImpuestosPorCompra).ToString("0.00")</p>
                            <p><strong>Stock:</strong> @item.Stock</p>
                            <p><strong>Categoría:</strong> @item.Categoria?.Nombre</p>
                            <p><strong>Activo:</strong> @(item.Activo ? "Sí" : "No")</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Script para recalcular IVA y total por modal -->
            <script>
                (function() {
                    const precioInput = document.getElementById('precio-@item.Id');
                    const ivaInput = document.getElementById('ivaPorc-@item.Id');
                    const ivaValueInput = document.getElementById('ivaValue-@item.Id');
                    const totalInput = document.getElementById('total-@item.Id');

                    function actualizarTotal() {
                        const precio = parseFloat((precioInput.value || "0").toString().replace(',', '.')) || 0;
                        const ivaPorc = parseFloat((ivaInput.value || "0").toString().replace(',', '.')) || 0;
                        const ivaValor = precio * (ivaPorc / 100);
                        totalInput.value = (precio + ivaValor).toFixed(2);
                        ivaValueInput.value = ivaValor.toFixed(2);
                    }

                    precioInput.addEventListener('input', actualizarTotal);
                    ivaInput.addEventListener('input', actualizarTotal);
                    actualizarTotal();
                })();
            </script>
        }
    </tbody>
</table>

<!-- Paginación -->
@if (ViewBag.TotalPages > 1)
{
    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="?page=@i&searchName=@ViewBag.CurrentName&categoryId=@ViewBag.CurrentCategory">@i</a>
                </li>
            }
        </ul>
    </nav>
}

<!-- Script AJAX global para editar productos -->
<script>
    (function () {
        function getRequestVerificationToken(form) {
            const tokenInput = form.querySelector('input[name="__RequestVerificationToken"]');
            return tokenInput ? tokenInput.value : null;
        }

        document.querySelectorAll('.edit-product-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                const productId = form.dataset.productid;
                const token = getRequestVerificationToken(form);

                form.querySelectorAll('.number-input').forEach(inp => {
                    if (inp && inp.value) inp.value = inp.value.toString().replace(',', '.');
                });

                const formData = new FormData(form);
                const checkbox = form.querySelector('input[name="Activo"][type="checkbox"]');
                formData.set('Activo', (checkbox && checkbox.checked) ? 'true' : 'false');

                fetch('/Productos/Edit', {
                    method: 'POST',
                    headers: token ? { 'RequestVerificationToken': token } : {},
                    body: formData,
                })
                .then(async res => {
                    if (res.ok) return res.json();
                    let err; try { err = await res.json(); } catch(e) { err = null; }
                    alert('Error al guardar el producto');
                    throw new Error('Server error');
                })
                .then(updated => {
                    const modalEl = document.getElementById('editModal-' + productId);
                    const modalInstance = bootstrap.Modal.getInstance(modalEl);
                    if (modalInstance) modalInstance.hide();

                    const row = document.getElementById('productoRow-' + productId);
                    if (row && updated) {
                        row.querySelector('.nombre').textContent = updated.Nombre;
                        row.querySelector('.precio').textContent = parseFloat(updated.Precio).toFixed(2);
                        const ivaPorc = updated.Precio ? ((updated.ImpuestosPorCompra / updated.Precio) * 100).toFixed(2) : '0.00';
                        row.querySelector('.iva').textContent = ivaPorc;
                        row.querySelector('.total').textContent = (parseFloat(updated.Precio) + parseFloat(updated.ImpuestosPorCompra)).toFixed(2);
                        row.querySelector('.stock').textContent = updated.Stock;
                        row.querySelector('.categoria').textContent = updated.CategoriaNombre || '';
                        row.querySelector('.activo').textContent = updated.Activo ? 'Sí' : 'No';
                        if(updated.ImagenUrl) {
                            let imgCell = row.querySelector('.imagen');
                            imgCell.innerHTML = `<img src="${updated.ImagenUrl}" width="60" height="60" />`;
                        }
                    }
                })
                .catch(err => console.log('AJAX finalize', err));
            });
        });
    })();
</script>
